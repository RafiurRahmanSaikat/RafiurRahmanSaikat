<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 300" xmlns:xlink="http://www.w3.org/1999/xlink">
  <!-- Definitions for gradients, patterns and animations -->
  <defs>
    <!-- Main background gradient -->
    <linearGradient id="bg-gradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#0F2027" />
      <stop offset="50%" stop-color="#203A43" />
      <stop offset="100%" stop-color="#2C5364" />
    </linearGradient>

    <!-- Text gradient for title -->
    <linearGradient id="text-gradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" stop-color="#ff7e5f" />
      <stop offset="100%" stop-color="#feb47b" />
    </linearGradient>

    <!-- Subtle grid pattern -->
    <pattern id="grid-pattern" width="30" height="30" patternUnits="userSpaceOnUse">
      <path d="M 30 0 L 0 0 0 30" fill="none" stroke="#ffffff10" stroke-width="0.5" />
    </pattern>

    <!-- Glow effect for icons -->
    <filter id="glow" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur stdDeviation="3" result="blur" />
      <feComposite in="SourceGraphic" in2="blur" operator="over" />
    </filter>

    <!-- Pulse animation for React icon -->
    <radialGradient id="react-glow" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
      <stop offset="0%" stop-color="#61DAFB" stop-opacity="0.6">
        <animate attributeName="stop-opacity" values="0.6;0.2;0.6" dur="2.5s" repeatCount="indefinite" />
      </stop>
      <stop offset="100%" stop-color="#61DAFB" stop-opacity="0" />
    </radialGradient>

    <!-- Animation for particle effect -->
    <filter id="particle-blur" x="0" y="0" width="100%" height="100%">
      <feGaussianBlur in="SourceGraphic" stdDeviation="1" />
    </filter>
  </defs>

  <!-- Background layers -->
  <rect width="1200" height="300" fill="url(#bg-gradient)" rx="10" ry="10" />
  <rect width="1200" height="300" fill="url(#grid-pattern)" rx="10" ry="10" />

  <!-- Decorative code lines background -->
  <g opacity="0.07">
    <text x="40" y="30" font-family="monospace" font-size="12" fill="#ffffff">import React, { useState, useEffect } from 'react';</text>
    <text x="40" y="50" font-family="monospace" font-size="12" fill="#ffffff">const DeveloperProfile = () => {</text>
    <text x="60" y="70" font-family="monospace" font-size="12" fill="#ffffff">const [skills, setSkills] = useState([]);</text>
    <text x="60" y="90" font-family="monospace" font-size="12" fill="#ffffff">useEffect(() => {</text>
    <text x="80" y="110" font-family="monospace" font-size="12" fill="#ffffff">fetchLatestTechnologies().then(data => setSkills(data));</text>
    <text x="60" y="130" font-family="monospace" font-size="12" fill="#ffffff">}, []);</text>
    <text x="60" y="150" font-family="monospace" font-size="12" fill="#ffffff">return (</text>
    <text x="80" y="170" font-family="monospace" font-size="12" fill="#ffffff">&lt;Profile name="Developer" skills={skills} /&gt;</text>
    <text x="60" y="190" font-family="monospace" font-size="12" fill="#ffffff">);</text>
    <text x="40" y="210" font-family="monospace" font-size="12" fill="#ffffff">};</text>
    <text x="40" y="230" font-family="monospace" font-size="12" fill="#ffffff">export default DeveloperProfile;</text>
  </g>

  <!-- Floating particles for dynamic effect -->
  <g filter="url(#particle-blur)">
    <circle cx="100" cy="50" r="2" fill="#61DAFB" opacity="0.7">
      <animate attributeName="cy" from="50" to="30" dur="3s" repeatCount="indefinite" />
    </circle>
    <circle cx="800" cy="70" r="1.5" fill="#ff7e5f" opacity="0.5">
      <animate attributeName="cy" from="70" to="90" dur="4s" repeatCount="indefinite" />
    </circle>
    <circle cx="300" cy="250" r="2" fill="#feb47b" opacity="0.6">
      <animate attributeName="cy" from="250" to="230" dur="5s" repeatCount="indefinite" />
    </circle>
    <circle cx="1000" cy="150" r="1.8" fill="#ffffff" opacity="0.5">
      <animate attributeName="cy" from="150" to="130" dur="3.5s" repeatCount="indefinite" />
    </circle>
    <circle cx="500" cy="200" r="1.2" fill="#61DAFB" opacity="0.4">
      <animate attributeName="cy" from="200" to="220" dur="4.5s" repeatCount="indefinite" />
    </circle>
  </g>

  <!-- Tech radar/graph background -->
  <g transform="translate(850, 150)">
    <circle cx="0" cy="0" r="120" fill="none" stroke="#ffffff20" stroke-width="1" />
    <circle cx="0" cy="0" r="80" fill="none" stroke="#ffffff15" stroke-width="1" />
    <circle cx="0" cy="0" r="40" fill="none" stroke="#ffffff10" stroke-width="1" />
    <line x1="-120" y1="0" x2="120" y2="0" stroke="#ffffff10" stroke-width="1" />
    <line x1="0" y1="-120" x2="0" y2="120" stroke="#ffffff10" stroke-width="1" />
    <line x1="-85" y1="-85" x2="85" y2="85" stroke="#ffffff10" stroke-width="1" />
    <line x1="85" y1="-85" x2="-85" y2="85" stroke="#ffffff10" stroke-width="1" />
  </g>

  <!-- Main title with gradient -->
  <g>
    <text x="80" y="80" font-family="'Segoe UI', Arial, sans-serif" font-size="42" font-weight="bold" fill="url(#text-gradient)">Full-Stack Developer</text>
    <text x="80" y="81" font-family="'Segoe UI', Arial, sans-serif" font-size="42" font-weight="bold" fill="url(#text-gradient)" opacity="0.3" filter="url(#glow)">Full-Stack Developer</text>
  </g>

  <!-- Subtitle with animated typing effect -->
  <text x="82" y="110" font-family="'Segoe UI', Arial, sans-serif" font-size="18" fill="#ffffff" opacity="0.8">
    <tspan>Building the future with code</tspan>
    <animate attributeName="opacity" values="0.8;1;0.8" dur="4s" repeatCount="indefinite" />
  </text>

  <!-- Tech stack badges -->
  <g transform="translate(80, 130)">
    <rect x="0" y="0" width="70" height="24" rx="12" fill="#ffffff15" />
    <text x="35" y="16" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" text-anchor="middle">React</text>

    <rect x="80" y="0" width="70" height="24" rx="12" fill="#ffffff15" />
    <text x="115" y="16" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" text-anchor="middle">Node.js</text>

    <rect x="160" y="0" width="70" height="24" rx="12" fill="#ffffff15" />
    <text x="195" y="16" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" text-anchor="middle">Python</text>

    <rect x="240" y="0" width="90" height="24" rx="12" fill="#ffffff15" />
    <text x="285" y="16" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" text-anchor="middle">TypeScript</text>

    <rect x="340" y="0" width="90" height="24" rx="12" fill="#ffffff15" />
    <text x="385" y="16" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" text-anchor="middle">MongoDB</text>
  </g>

  <!-- Project showcase section -->
  <g transform="translate(80, 170)">
    <!-- React Project -->
    <g>
      <circle cx="60" cy="60" r="50" fill="#ffffff10" stroke="#ffffff25" stroke-width="2" />
      <circle cx="60" cy="60" r="55" fill="none" stroke="url(#react-glow)" stroke-width="2" opacity="0.6">
        <animate attributeName="r" values="55;58;55" dur="3s" repeatCount="indefinite" />
      </circle>
      <g transform="translate(25, 25)">
        <circle cx="35" cy="35" r="7" fill="#61DAFB" />
        <ellipse cx="35" cy="35" rx="25" ry="10" fill="none" stroke="#61DAFB" stroke-width="2.5" transform="rotate(0, 35, 35)">
          <animateTransform attributeName="transform" type="rotate" from="0 35 35" to="360 35 35" dur="10s" repeatCount="indefinite" />
        </ellipse>
        <ellipse cx="35" cy="35" rx="25" ry="10" fill="none" stroke="#61DAFB" stroke-width="2.5" transform="rotate(60, 35, 35)">
          <animateTransform attributeName="transform" type="rotate" from="60 35 35" to="420 35 35" dur="15s" repeatCount="indefinite" />
        </ellipse>
        <ellipse cx="35" cy="35" rx="25" ry="10" fill="none" stroke="#61DAFB" stroke-width="2.5" transform="rotate(120, 35, 35)">
          <animateTransform attributeName="transform" type="rotate" from="120 35 35" to="480 35 35" dur="20s" repeatCount="indefinite" />
        </ellipse>
      </g>
      <text x="60" y="125" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#ffffff" text-anchor="middle">Project One</text>
    </g>

    <!-- Node.js Project -->
    <g transform="translate(140, 0)">
      <circle cx="60" cy="60" r="50" fill="#ffffff10" stroke="#ffffff25" stroke-width="2" />
      <g transform="translate(25, 25) scale(0.07)">
        <path d="M471.05,51.611c-7.604-4.738-16.604-4.738-24.179,0L226.345,166.233c-7.575,4.738-12.195,13.015-12.195,22.015v229.775c0,9.054,4.619,17.461,12.195,22.199l220.526,114.591c7.575,4.738,16.575,4.738,24.179,0l220.889-114.591c7.575-4.738,12.224-13.145,12.224-22.199V188.248c0-9-4.649-17.277-12.224-22.015L471.05,51.611z" fill="#689F63">
          <animate attributeName="opacity" values="1;0.8;1" dur="4s" repeatCount="indefinite" />
        </path>
      </g>
      <text x="60" y="125" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#ffffff" text-anchor="middle">Project Two</text>
    </g>

    <!-- Python/Django Project -->
    <g transform="translate(280, 0)">
      <circle cx="60" cy="60" r="50" fill="#ffffff10" stroke="#ffffff25" stroke-width="2" />
      <g transform="translate(25, 25) scale(0.06)">
        <path d="M716.96,302.608v-66.876c0-51.075-43.54-94.616-94.616-94.616h-66.876c-51.075,0-94.616,43.54-94.616,94.616v66.876c0,51.075,43.54,94.616,94.616,94.616h66.876C673.42,397.224,716.96,353.683,716.96,302.608z" fill="#4584b6" />
        <path d="M539.752,725.284v-66.876c0-51.075-43.54-94.616-94.616-94.616h-66.876c-51.075,0-94.616,43.54-94.616,94.616v66.876c0,51.075,43.54,94.616,94.616,94.616h66.876C496.212,819.9,539.752,776.359,539.752,725.284z" fill="#ffde57" />
        <animateTransform attributeName="transform" type="rotate" from="0 400 400" to="360 400 400" dur="20s" repeatCount="indefinite" />
      </g>
      <text x="60" y="125" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#ffffff" text-anchor="middle">Project Three</text>
    </g>

    <!-- Data Visualization Project -->
    <g transform="translate(420, 0)">
      <circle cx="60" cy="60" r="50" fill="#ffffff10" stroke="#ffffff25" stroke-width="2" />
      <g transform="translate(25, 25)">
        <rect x="5" y="55" width="12" height="10" fill="#ff7e5f" rx="1" ry="1">
          <animate attributeName="height" values="10;40;10" dur="2s" repeatCount="indefinite" />
        </rect>
        <rect x="23" y="35" width="12" height="30" fill="#feb47b" rx="1" ry="1">
          <animate attributeName="height" values="30;15;30" dur="2.3s" repeatCount="indefinite" />
        </rect>
        <rect x="41" y="20" width="12" height="45" fill="#61DAFB" rx="1" ry="1">
          <animate attributeName="height" values="45;60;45" dur="1.8s" repeatCount="indefinite" />
        </rect>
        <rect x="59" y="25" width="12" height="40" fill="#ffffff" rx="1" ry="1" opacity="0.8">
          <animate attributeName="height" values="40;20;40" dur="2.5s" repeatCount="indefinite" />
        </rect>
        <path d="M5,20 L16,10 L35,30 L50,5 L65,15" fill="none" stroke="#ffffff" stroke-width="2" opacity="0.8" />
      </g>
      <text x="60" y="125" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#ffffff" text-anchor="middle">Data Viz</text>
    </g>

    <!-- AI/ML Project -->
    <g transform="translate(560, 0)">
      <circle cx="60" cy="60" r="50" fill="#ffffff10" stroke="#ffffff25" stroke-width="2" />
      <g transform="translate(25, 25)">
        <!-- Neural network node visualization -->
        <circle cx="35" cy="15" r="5" fill="#ff7e5f" />
        <circle cx="20" cy="35" r="5" fill="#feb47b" />
        <circle cx="50" cy="35" r="5" fill="#feb47b" />
        <circle cx="35" cy="55" r="5" fill="#61DAFB" />

        <!-- Connections -->
        <line x1="35" y1="15" x2="20" y2="35" stroke="#ffffff" stroke-width="1" opacity="0.5">
          <animate attributeName="opacity" values="0.5;0.8;0.5" dur="1.5s" repeatCount="indefinite" />
        </line>
        <line x1="35" y1="15" x2="50" y2="35" stroke="#ffffff" stroke-width="1" opacity="0.5">
          <animate attributeName="opacity" values="0.5;0.8;0.5" dur="2s" repeatCount="indefinite" />
        </line>
        <line x1="20" y1="35" x2="35" y2="55" stroke="#ffffff" stroke-width="1" opacity="0.5">
          <animate attributeName="opacity" values="0.5;0.8;0.5" dur="2.2s" repeatCount="indefinite" />
        </line>
        <line x1="50" y1="35" x2="35" y2="55" stroke="#ffffff" stroke-width="1" opacity="0.5">
          <animate attributeName="opacity" values="0.5;0.8;0.5" dur="1.8s" repeatCount="indefinite" />
        </line>
      </g>
      <text x="60" y="125" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#ffffff" text-anchor="middle">AI/ML</text>
    </g>
  </g>

  <!-- Stats section with animated bars -->
  <g transform="translate(80, 260)">
    <text font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" opacity="0.7">Latest Github Stats:</text>

    <!-- Animated stat bars -->
    <g transform="translate(130, 0)">
      <rect x="0" y="-3" width="120" height="6" rx="3" ry="3" fill="#ffffff10"/>
      <rect x="0" y="-3" width="90" height="6" rx="3" ry="3" fill="#ff7e5f">
        <animate attributeName="width" values="0;90" dur="1s" />
      </rect>
      <text x="95" y="1" font-family="'Segoe UI', Arial, sans-serif" font-size="10" fill="#ffffff" opacity="0.9">Commits</text>
    </g>

    <g transform="translate(280, 0)">
      <rect x="0" y="-3" width="120" height="6" rx="3" ry="3" fill="#ffffff10"/>
      <rect x="0" y="-3" width="75" height="6" rx="3" ry="3" fill="#feb47b">
        <animate attributeName="width" values="0;75" dur="1.2s" />
      </rect>
      <text x="80" y="1" font-family="'Segoe UI', Arial, sans-serif" font-size="10" fill="#ffffff" opacity="0.9">PRs</text>
    </g>

    <g transform="translate(430, 0)">
      <rect x="0" y="-3" width="120" height="6" rx="3" ry="3" fill="#ffffff10"/>
      <rect x="0" y="-3" width="105" height="6" rx="3" ry="3" fill="#61DAFB">
        <animate attributeName="width" values="0;105" dur="1.4s" />
      </rect>
      <text x="110" y="1" font-family="'Segoe UI', Arial, sans-serif" font-size="10" fill="#ffffff" opacity="0.9">Contributions</text>
    </g>
  </g>

  <!-- Social links with hover effect -->
  <g transform="translate(80, 290)">
    <text font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" opacity="0.7">Connect:</text>
    <text x="75" y="0" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ff7e5f">GitHub</text>
    <text x="130" y="0" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#feb47b">LinkedIn</text>
    <text x="195" y="0" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#61DAFB">Twitter</text>
    <text x="255" y="0" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" opacity="0.9">Portfolio</text>
  </g>
</svg>